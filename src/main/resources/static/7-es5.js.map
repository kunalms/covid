{"version":3,"sources":["webpack:///src/app/range/range.module.ts","webpack:///node_modules/@angular/material/esm2015/slide-toggle.js.pre-build-optimizer.js","webpack:///node_modules/@angular/material/slide-toggle/typings/index.ngfactory.js.pre-build-optimizer.js","webpack:///node_modules/@angular/material/slide-toggle/typings/index.d.ts.MatSlideToggle.html","webpack:///src/app/range/range/range.component.ts","webpack:///src/app/range/range/range.component.ngfactory.js.pre-build-optimizer.js","webpack:///src/app/range/range/range.component.scss.shim.ngstyle.js.pre-build-optimizer.js","webpack:///src/app/range/range/range.component.html","webpack:///src/app/range/range-routing.module.ts","webpack:///src/app/range/range.module.ngfactory.js.pre-build-optimizer.js"],"names":["RangeModule","MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS","core","o","providedIn","factory","disableToggleValue","disableDragValue","nextUniqueId","MatSlideToggleChange","source","checked","this","slide_toggle_MatSlideToggle","elementRef","_focusMonitor","_changeDetectorRef","tabIndex","_ngZone","defaults","_animationMode","_dir","super","_onChange","_","_onTouched","_uniqueId","_required","_checked","_dragging","name","id","labelPosition","ariaLabel","ariaLabelledby","change","m","toggleChange","dragChange","parseInt","_this2","monitor","_elementRef","subscribe","focusOrigin","Promise","resolve","then","stopMonitoring","event","stopPropagation","emit","_inputElement","nativeElement","_emitChangeEvent","value","fn","isDisabled","disabled","markForCheck","options","focusVia","distance","percentage","_thumbBarWidth","_previousChecked","Math","max","min","thumbEl","_thumbEl","_thumbBarEl","clientWidth","classList","add","direction","_dragPercentage","_getDragPercentage","deltaX","style","transform","_this3","newCheckedValue","runOutsideAngular","setTimeout","remove","detectChanges","Object","coercion","b","concat","esm2015_core","E","A","B","C","MatSlideToggleBase","_MatSlideToggleRequiredValidatorModule","MatSlideToggleModule","RenderType_MatSlideToggle","pb","encapsulation","styles","data","View_MatSlideToggle_0","_l","Jb","Gb","rb","_v","en","$event","ad","_co","component","_onChangeEvent","_onInputClick","_onDragStart","_onDrag","_onDragEnd","qb","t","k","x","platform","a","animations","centered","radius","animation","trigger","Eb","enterDuration","_onLabelTextChange","observers","Ib","Cb","_ck","currVal_14","disableRipple","Db","inputId","textContent","trim","required","toString","unbounded","RangeComponent","stateService","patientService","states","selected","showUnClassifiedData","_this4","getAll","generateData","_this5","getRange","chartData","originalChartData","JSON","parse","stringify","filterResults","filter","item","RenderType_RangeComponent","app_component_scss_shim_ngstyle","View_RangeComponent_1","_selectViaInteraction","_handleKeydown","index_ngfactory","p","h","j","context","$implicit","code","_getTabIndex","multiple","active","_getAriaSelected","View_RangeComponent_2","bar_chart_component_ngfactory","bar_chart_component","View_RangeComponent_0","flex","c","flex_layout_esm2015_core","i","f","fxLayout","d","bidi","fxLayoutGap","fxLayoutAlign","typings_index_ngfactory","form_field","_controlNonStatic","_controlStatic","_labelChildNonStatic","_labelChildStatic","_placeholderChild","_errorChildren","_hintChildren","_prefixChildren","_suffixChildren","e","fxFlex","_onFocus","_onBlur","select_typings_index_ngfactory","Fb","esm2015_select","scrolling","fesm2015_forms","a11y","selectionChange","valueChange","optionGroups","customTrigger","gb","common","N","K","q","ngForOf","focus","toggleDataVisibility","p0_0","color","ngIf","appearance","_control","errorState","_canLabelFloat","_shouldLabelFloat","_hasFloatingLabel","_hideControlPlaceholder","autofilled","focused","_shouldForward","_animationsEnabled","_getAriaLabel","_getAriaLabelledby","panelOpen","_optionIds","_ariaDescribedby","_getAriaActiveDescendant","empty","RangeComponentNgFactory","nb","state_service","patient_service","RangeRoutingModule","__webpack_require__","__webpack_exports__","RangeModuleNgFactory","ob","Ab","Bb","Z","router_ngfactory","v","l","s","overlay","g","p0_1","z","platform_browser","router","r","u","esm2015_button","icon","portal","extended","grid","flex_layout","shared_module","path"],"mappings":"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","file":"7-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RangeComponent } from './range/range.component';\nimport { RangeRoutingModule } from './range-routing.module';\nimport {SharedModule} from '../shared/shared.module';\nimport {MatSlideToggleModule} from '@angular/material';\n\n\n\n@NgModule({\n  declarations: [RangeComponent],\n    imports: [\n        CommonModule,\n        RangeRoutingModule,\n        SharedModule,\n        MatSlideToggleModule\n    ]\n})\nexport class RangeModule { }\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { InjectionToken, Attribute, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, forwardRef, Input, Output, ViewChild, ViewEncapsulation, NgZone, Optional, Inject, Directive, NgModule } from '@angular/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { NG_VALUE_ACCESSOR, CheckboxRequiredValidator, NG_VALIDATORS } from '@angular/forms';\nimport { mixinColor, mixinDisabled, mixinDisableRipple, mixinTabIndex, GestureConfig, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { HAMMER_GESTURE_CONFIG } from '@angular/platform-browser';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token to be used to override the default options for `mat-slide-toggle`.\n * @type {?}\n */\nconst MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS = new InjectionToken('mat-slide-toggle-default-options', {\n    providedIn: 'root',\n    factory: (/**\n     * @return {?}\n     */\n    () => ({ disableToggleValue: false, disableDragValue: false }))\n});\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Increasing integer for generating unique ids for slide-toggle components.\n/** @type {?} */\nlet nextUniqueId = 0;\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_SLIDE_TOGGLE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatSlideToggle)),\n    multi: true\n};\n/**\n * Change event object emitted by a MatSlideToggle.\n */\nclass MatSlideToggleChange {\n    /**\n     * @param {?} source\n     * @param {?} checked\n     */\n    constructor(source, checked) {\n        this.source = source;\n        this.checked = checked;\n    }\n}\n// Boilerplate for applying mixins to MatSlideToggle.\n/**\n * \\@docs-private\n */\nclass MatSlideToggleBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\n/** @type {?} */\nconst _MatSlideToggleMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(MatSlideToggleBase)), 'accent'));\n/**\n * Represents a slidable \"switch\" toggle that can be moved between on and off.\n */\nclass MatSlideToggle extends _MatSlideToggleMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _focusMonitor\n     * @param {?} _changeDetectorRef\n     * @param {?} tabIndex\n     * @param {?} _ngZone\n     * @param {?} defaults\n     * @param {?=} _animationMode\n     * @param {?=} _dir\n     */\n    constructor(elementRef, _focusMonitor, _changeDetectorRef, tabIndex, _ngZone, defaults, _animationMode, _dir) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._ngZone = _ngZone;\n        this.defaults = defaults;\n        this._animationMode = _animationMode;\n        this._dir = _dir;\n        this._onChange = (/**\n         * @param {?} _\n         * @return {?}\n         */\n        (_) => { });\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        this._uniqueId = `mat-slide-toggle-${++nextUniqueId}`;\n        this._required = false;\n        this._checked = false;\n        /**\n         * Whether the thumb is currently being dragged.\n         */\n        this._dragging = false;\n        /**\n         * Name value will be applied to the input element if present.\n         */\n        this.name = null;\n        /**\n         * A unique id for the slide-toggle input. If none is supplied, it will be auto-generated.\n         */\n        this.id = this._uniqueId;\n        /**\n         * Whether the label should appear after or before the slide-toggle. Defaults to 'after'.\n         */\n        this.labelPosition = 'after';\n        /**\n         * Used to set the aria-label attribute on the underlying input element.\n         */\n        this.ariaLabel = null;\n        /**\n         * Used to set the aria-labelledby attribute on the underlying input element.\n         */\n        this.ariaLabelledby = null;\n        /**\n         * An event will be dispatched each time the slide-toggle changes its value.\n         */\n        this.change = new EventEmitter();\n        /**\n         * An event will be dispatched each time the slide-toggle input is toggled.\n         * This event is always emitted when the user toggles the slide toggle, but this does not mean\n         * the slide toggle's value has changed. The event does not fire when the user drags to change\n         * the slide toggle value.\n         */\n        this.toggleChange = new EventEmitter();\n        /**\n         * An event will be dispatched each time the slide-toggle is dragged.\n         * This event is always emitted when the user drags the slide toggle to make a change greater\n         * than 50%. It does not mean the slide toggle's value is changed. The event is not emitted when\n         * the user toggles the slide toggle to change its value.\n         */\n        this.dragChange = new EventEmitter();\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n    /**\n     * Whether the slide-toggle is required.\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    /**\n     * Whether the slide-toggle element is checked or not.\n     * @return {?}\n     */\n    get checked() { return this._checked; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set checked(value) {\n        this._checked = coerceBooleanProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Returns the unique id for the visual hidden input.\n     * @return {?}\n     */\n    get inputId() { return `${this.id || this._uniqueId}-input`; }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._focusMonitor\n            .monitor(this._elementRef, true)\n            .subscribe((/**\n         * @param {?} focusOrigin\n         * @return {?}\n         */\n        focusOrigin => {\n            if (!focusOrigin) {\n                // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n                // Angular does not expect events to be raised during change detection, so any state\n                // change (such as a form control's 'ng-touched') will cause a changed-after-checked\n                // error. See https://github.com/angular/angular/issues/17793. To work around this,\n                // we defer telling the form control it has been touched until the next tick.\n                Promise.resolve().then((/**\n                 * @return {?}\n                 */\n                () => this._onTouched()));\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /**\n     * Method being called whenever the underlying input emits a change event.\n     * @param {?} event\n     * @return {?}\n     */\n    _onChangeEvent(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the component's `change` output.\n        event.stopPropagation();\n        if (!this._dragging) {\n            this.toggleChange.emit();\n        }\n        // Releasing the pointer over the `<label>` element while dragging triggers another\n        // click event on the `<label>` element. This means that the checked state of the underlying\n        // input changed unintentionally and needs to be changed back. Or when the slide toggle's config\n        // disabled toggle change event by setting `disableToggleValue: true`, the slide toggle's value\n        // does not change, and the checked state of the underlying input needs to be changed back.\n        if (this._dragging || this.defaults.disableToggleValue) {\n            this._inputElement.nativeElement.checked = this.checked;\n            return;\n        }\n        // Sync the value from the underlying input element with the component instance.\n        this.checked = this._inputElement.nativeElement.checked;\n        // Emit our custom change event only if the underlying input emitted one. This ensures that\n        // there is no change event, when the checked state changes programmatically.\n        this._emitChangeEvent();\n    }\n    /**\n     * Method being called whenever the slide-toggle has been clicked.\n     * @param {?} event\n     * @return {?}\n     */\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `slide-toggle` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.checked = !!value;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Implemented as a part of ControlValueAccessor.\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Focuses the slide-toggle.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._focusMonitor.focusVia(this._inputElement, 'keyboard', options);\n    }\n    /**\n     * Toggles the checked state of the slide-toggle.\n     * @return {?}\n     */\n    toggle() {\n        this.checked = !this.checked;\n        this._onChange(this.checked);\n    }\n    /**\n     * Emits a change event on the `change` output. Also notifies the FormControl about the change.\n     * @private\n     * @return {?}\n     */\n    _emitChangeEvent() {\n        this._onChange(this.checked);\n        this.change.emit(new MatSlideToggleChange(this, this.checked));\n    }\n    /**\n     * Retrieves the percentage of thumb from the moved distance. Percentage as fraction of 100.\n     * @private\n     * @param {?} distance\n     * @return {?}\n     */\n    _getDragPercentage(distance) {\n        /** @type {?} */\n        let percentage = (distance / this._thumbBarWidth) * 100;\n        // When the toggle was initially checked, then we have to start the drag at the end.\n        if (this._previousChecked) {\n            percentage += 100;\n        }\n        return Math.max(0, Math.min(percentage, 100));\n    }\n    /**\n     * @return {?}\n     */\n    _onDragStart() {\n        if (!this.disabled && !this._dragging) {\n            /** @type {?} */\n            const thumbEl = this._thumbEl.nativeElement;\n            this._thumbBarWidth = this._thumbBarEl.nativeElement.clientWidth - thumbEl.clientWidth;\n            thumbEl.classList.add('mat-dragging');\n            this._previousChecked = this.checked;\n            this._dragging = true;\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onDrag(event) {\n        if (this._dragging) {\n            /** @type {?} */\n            const direction = this._dir && this._dir.value === 'rtl' ? -1 : 1;\n            this._dragPercentage = this._getDragPercentage(event.deltaX * direction);\n            // Calculate the moved distance based on the thumb bar width.\n            /** @type {?} */\n            const dragX = (this._dragPercentage / 100) * this._thumbBarWidth * direction;\n            this._thumbEl.nativeElement.style.transform = `translate3d(${dragX}px, 0, 0)`;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _onDragEnd() {\n        if (this._dragging) {\n            /** @type {?} */\n            const newCheckedValue = this._dragPercentage > 50;\n            if (newCheckedValue !== this.checked) {\n                this.dragChange.emit();\n                if (!this.defaults.disableDragValue) {\n                    this.checked = newCheckedValue;\n                    this._emitChangeEvent();\n                }\n            }\n            // The drag should be stopped outside of the current event handler, otherwise the\n            // click event will be fired before it and will revert the drag change.\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => setTimeout((/**\n             * @return {?}\n             */\n            () => {\n                if (this._dragging) {\n                    this._dragging = false;\n                    this._thumbEl.nativeElement.classList.remove('mat-dragging');\n                    // Reset the transform because the component will take care\n                    // of the thumb position after drag.\n                    this._thumbEl.nativeElement.style.transform = '';\n                }\n            }))));\n        }\n    }\n    /**\n     * Method being called whenever the label text changes.\n     * @return {?}\n     */\n    _onLabelTextChange() {\n        // Since the event of the `cdkObserveContent` directive runs outside of the zone, the\n        // slide-toggle component will be only marked for check, but no actual change detection runs\n        // automatically. Instead of going back into the zone in order to trigger a change detection\n        // which causes *all* components to be checked (if explicitly marked or not using OnPush),\n        // we only trigger an explicit change detection for the slide-toggle view and its children.\n        this._changeDetectorRef.detectChanges();\n    }\n}\nMatSlideToggle.decorators = [\n    { type: Component, args: [{selector: 'mat-slide-toggle',\n                exportAs: 'matSlideToggle',\n                host: {\n                    'class': 'mat-slide-toggle',\n                    '[id]': 'id',\n                    // Needs to be `-1` so it can still receive programmatic focus.\n                    '[attr.tabindex]': 'disabled ? null : -1',\n                    '[attr.aria-label]': 'null',\n                    '[attr.aria-labelledby]': 'null',\n                    '[class.mat-checked]': 'checked',\n                    '[class.mat-disabled]': 'disabled',\n                    '[class.mat-slide-toggle-label-before]': 'labelPosition == \"before\"',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    '(focus)': '_inputElement.nativeElement.focus()',\n                },\n                template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-slide-toggle-label\\\" #label><div #toggleBar class=\\\"mat-slide-toggle-bar\\\" [class.mat-slide-toggle-bar-no-side-margin]=\\\"!labelContent.textContent || !labelContent.textContent.trim()\\\"><input #input class=\\\"mat-slide-toggle-input cdk-visually-hidden\\\" type=\\\"checkbox\\\" role=\\\"switch\\\" [id]=\\\"inputId\\\" [required]=\\\"required\\\" [tabIndex]=\\\"tabIndex\\\" [checked]=\\\"checked\\\" [disabled]=\\\"disabled\\\" [attr.name]=\\\"name\\\" [attr.aria-checked]=\\\"checked.toString()\\\" [attr.aria-label]=\\\"ariaLabel\\\" [attr.aria-labelledby]=\\\"ariaLabelledby\\\" (change)=\\\"_onChangeEvent($event)\\\" (click)=\\\"_onInputClick($event)\\\"><div class=\\\"mat-slide-toggle-thumb-container\\\" #thumbContainer (slidestart)=\\\"_onDragStart()\\\" (slide)=\\\"_onDrag($event)\\\" (slideend)=\\\"_onDragEnd()\\\"><div class=\\\"mat-slide-toggle-thumb\\\"></div><div class=\\\"mat-slide-toggle-ripple\\\" mat-ripple [matRippleTrigger]=\\\"label\\\" [matRippleDisabled]=\\\"disableRipple || disabled\\\" [matRippleCentered]=\\\"true\\\" [matRippleRadius]=\\\"20\\\" [matRippleAnimation]=\\\"{enterDuration: 150}\\\"><div class=\\\"mat-ripple-element mat-slide-toggle-persistent-ripple\\\"></div></div></div></div><span class=\\\"mat-slide-toggle-content\\\" #labelContent (cdkObserveContent)=\\\"_onLabelTextChange()\\\"><span style=\\\"display:none\\\">&nbsp;</span><ng-content></ng-content></span></label>\",\n                styles: [\".mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:0;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-tap-highlight-color:transparent}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px,0,0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px,0,0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}.mat-slide-toggle-bar,[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-right:8px;margin-left:0}.mat-slide-toggle-label-before .mat-slide-toggle-bar,[dir=rtl] .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0,0,0);transition:all 80ms linear;transition-property:transform;cursor:-webkit-grab;cursor:grab}.mat-slide-toggle-thumb-container.mat-dragging{transition-duration:0s}.mat-slide-toggle-thumb-container:active{cursor:-webkit-grabbing;cursor:grabbing}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media (hover:none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}@media (-ms-high-contrast:active){.mat-slide-toggle-thumb{background:#fff;border:1px solid #000}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb{background:#000;border:1px solid #fff}.mat-slide-toggle-bar{background:#fff}.mat-slide-toggle.cdk-keyboard-focused .mat-slide-toggle-bar{outline:1px dotted;outline-offset:5px}}@media (-ms-high-contrast:black-on-white){.mat-slide-toggle-bar{border:1px solid #000}}\"],\n                providers: [MAT_SLIDE_TOGGLE_VALUE_ACCESSOR],\n                inputs: ['disabled', 'disableRipple', 'color', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n            },] },\n];\n/** @nocollapse */\nMatSlideToggle.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: ChangeDetectorRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nMatSlideToggle.propDecorators = {\n    _thumbEl: [{ type: ViewChild, args: ['thumbContainer', { static: false },] }],\n    _thumbBarEl: [{ type: ViewChild, args: ['toggleBar', { static: false },] }],\n    name: [{ type: Input }],\n    id: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    required: [{ type: Input }],\n    checked: [{ type: Input }],\n    change: [{ type: Output }],\n    toggleChange: [{ type: Output }],\n    dragChange: [{ type: Output }],\n    _inputElement: [{ type: ViewChild, args: ['input', { static: false },] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatSlideToggleRequiredValidator)),\n    multi: true\n};\n/**\n * Validator for Material slide-toggle components with the required attribute in a\n * template-driven form. The default validator for required form controls asserts\n * that the control value is not undefined but that is not appropriate for a slide-toggle\n * where the value is always defined.\n *\n * Required slide-toggle form controls are valid when checked.\n */\nclass MatSlideToggleRequiredValidator extends CheckboxRequiredValidator {\n}\nMatSlideToggleRequiredValidator.decorators = [\n    { type: Directive, args: [{\n                selector: `mat-slide-toggle[required][formControlName],\n             mat-slide-toggle[required][formControl], mat-slide-toggle[required][ngModel]`,\n                providers: [MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR],\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * This module is used by both original and MDC-based slide-toggle implementations.\n */\n// tslint:disable-next-line:class-name\nclass _MatSlideToggleRequiredValidatorModule {\n}\n_MatSlideToggleRequiredValidatorModule.decorators = [\n    { type: NgModule, args: [{\n                exports: [MatSlideToggleRequiredValidator],\n                declarations: [MatSlideToggleRequiredValidator],\n            },] },\n];\nclass MatSlideToggleModule {\n}\nMatSlideToggleModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [\n                    _MatSlideToggleRequiredValidatorModule,\n                    MatRippleModule,\n                    MatCommonModule,\n                    ObserversModule,\n                ],\n                exports: [\n                    _MatSlideToggleRequiredValidatorModule,\n                    MatSlideToggle,\n                    MatCommonModule\n                ],\n                declarations: [MatSlideToggle],\n                providers: [\n                    { provide: HAMMER_GESTURE_CONFIG, useClass: GestureConfig }\n                ],\n            },] },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { _MatSlideToggleRequiredValidatorModule, MatSlideToggleModule, MAT_SLIDE_TOGGLE_VALUE_ACCESSOR, MatSlideToggleChange, MatSlideToggle, MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS, MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR, MatSlideToggleRequiredValidator };\n//# sourceMappingURL=slide-toggle.js.map\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/slide-toggle\";\nimport * as i2 from \"@angular/cdk/observers\";\nimport * as i3 from \"@angular/platform-browser\";\nimport * as i4 from \"@angular/material/core\";\nimport * as i5 from \"@angular/cdk/bidi\";\nimport * as i6 from \"@angular/cdk/platform\";\nimport * as i7 from \"@angular/platform-browser/animations\";\nimport * as i8 from \"@angular/forms\";\nimport * as i9 from \"@angular/cdk/a11y\";\nvar _MatSlideToggleRequiredValidatorModuleNgFactory = i0.ɵcmf(i1._MatSlideToggleRequiredValidatorModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, []], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(1073742336, i1._MatSlideToggleRequiredValidatorModule, i1._MatSlideToggleRequiredValidatorModule, [])]); });\nexport { _MatSlideToggleRequiredValidatorModuleNgFactory as _MatSlideToggleRequiredValidatorModuleNgFactory };\nvar MatSlideToggleModuleNgFactory = i0.ɵcmf(i1.MatSlideToggleModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, []], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(4608, i2.MutationObserverFactory, i2.MutationObserverFactory, []), i0.ɵmpd(4608, i3.HAMMER_GESTURE_CONFIG, i4.GestureConfig, [[2, i4.MAT_HAMMER_OPTIONS], [2, i4.MatCommonModule]]), i0.ɵmpd(1073742336, i1._MatSlideToggleRequiredValidatorModule, i1._MatSlideToggleRequiredValidatorModule, []), i0.ɵmpd(1073742336, i5.BidiModule, i5.BidiModule, []), i0.ɵmpd(1073742336, i4.MatCommonModule, i4.MatCommonModule, [[2, i4.MATERIAL_SANITY_CHECKS], [2, i3.HAMMER_LOADER]]), i0.ɵmpd(1073742336, i6.PlatformModule, i6.PlatformModule, []), i0.ɵmpd(1073742336, i4.MatRippleModule, i4.MatRippleModule, []), i0.ɵmpd(1073742336, i2.ObserversModule, i2.ObserversModule, []), i0.ɵmpd(1073742336, i1.MatSlideToggleModule, i1.MatSlideToggleModule, [])]); });\nexport { MatSlideToggleModuleNgFactory as MatSlideToggleModuleNgFactory };\nvar styles_MatSlideToggle = [\".mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:0;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-tap-highlight-color:transparent}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px,0,0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px,0,0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}.mat-slide-toggle-bar,[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-right:8px;margin-left:0}.mat-slide-toggle-label-before .mat-slide-toggle-bar,[dir=rtl] .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0,0,0);transition:all 80ms linear;transition-property:transform;cursor:-webkit-grab;cursor:grab}.mat-slide-toggle-thumb-container.mat-dragging{transition-duration:0s}.mat-slide-toggle-thumb-container:active{cursor:-webkit-grabbing;cursor:grabbing}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media (hover:none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}@media (-ms-high-contrast:active){.mat-slide-toggle-thumb{background:#fff;border:1px solid #000}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb{background:#000;border:1px solid #fff}.mat-slide-toggle-bar{background:#fff}.mat-slide-toggle.cdk-keyboard-focused .mat-slide-toggle-bar{outline:1px dotted;outline-offset:5px}}@media (-ms-high-contrast:black-on-white){.mat-slide-toggle-bar{border:1px solid #000}}\"];\nvar RenderType_MatSlideToggle = i0.ɵcrt({ encapsulation: 2, styles: styles_MatSlideToggle, data: {} });\nexport { RenderType_MatSlideToggle as RenderType_MatSlideToggle };\nexport function View_MatSlideToggle_0(_l) { return i0.ɵvid(2, [i0.ɵqud(671088640, 1, { _thumbEl: 0 }), i0.ɵqud(671088640, 2, { _thumbBarEl: 0 }), i0.ɵqud(671088640, 3, { _inputElement: 0 }), (_l()(), i0.ɵeld(3, 0, [[\"label\", 1]], null, 13, \"label\", [[\"class\", \"mat-slide-toggle-label\"]], [[1, \"for\", 0]], null, null, null, null)), (_l()(), i0.ɵeld(4, 0, [[2, 0], [\"toggleBar\", 1]], null, 7, \"div\", [[\"class\", \"mat-slide-toggle-bar\"]], [[2, \"mat-slide-toggle-bar-no-side-margin\", null]], null, null, null, null)), (_l()(), i0.ɵeld(5, 0, [[3, 0], [\"input\", 1]], null, 0, \"input\", [[\"class\", \"mat-slide-toggle-input cdk-visually-hidden\"], [\"role\", \"switch\"], [\"type\", \"checkbox\"]], [[8, \"id\", 0], [8, \"required\", 0], [8, \"tabIndex\", 0], [8, \"checked\", 0], [8, \"disabled\", 0], [1, \"name\", 0], [1, \"aria-checked\", 0], [1, \"aria-label\", 0], [1, \"aria-labelledby\", 0]], [[null, \"change\"], [null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"change\" === en)) {\n        var pd_0 = (_co._onChangeEvent($event) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"click\" === en)) {\n        var pd_1 = (_co._onInputClick($event) !== false);\n        ad = (pd_1 && ad);\n    } return ad; }, null, null)), (_l()(), i0.ɵeld(6, 0, [[1, 0], [\"thumbContainer\", 1]], null, 5, \"div\", [[\"class\", \"mat-slide-toggle-thumb-container\"]], null, [[null, \"slidestart\"], [null, \"slide\"], [null, \"slideend\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"slidestart\" === en)) {\n        var pd_0 = (_co._onDragStart() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"slide\" === en)) {\n        var pd_1 = (_co._onDrag($event) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"slideend\" === en)) {\n        var pd_2 = (_co._onDragEnd() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, null, null)), (_l()(), i0.ɵeld(7, 0, null, null, 0, \"div\", [[\"class\", \"mat-slide-toggle-thumb\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(8, 0, null, null, 3, \"div\", [[\"class\", \"mat-slide-toggle-ripple mat-ripple\"], [\"mat-ripple\", \"\"]], [[2, \"mat-ripple-unbounded\", null]], null, null, null, null)), i0.ɵdid(9, 212992, null, 0, i4.MatRipple, [i0.ElementRef, i0.NgZone, i6.Platform, [2, i4.MAT_RIPPLE_GLOBAL_OPTIONS], [2, i7.ANIMATION_MODULE_TYPE]], { centered: [0, \"centered\"], radius: [1, \"radius\"], animation: [2, \"animation\"], disabled: [3, \"disabled\"], trigger: [4, \"trigger\"] }, null), i0.ɵpod(10, { enterDuration: 0 }), (_l()(), i0.ɵeld(11, 0, null, null, 0, \"div\", [[\"class\", \"mat-ripple-element mat-slide-toggle-persistent-ripple\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(12, 0, [[\"labelContent\", 1]], null, 4, \"span\", [[\"class\", \"mat-slide-toggle-content\"]], null, [[null, \"cdkObserveContent\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"cdkObserveContent\" === en)) {\n        var pd_0 = (_co._onLabelTextChange() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), i0.ɵdid(13, 1196032, null, 0, i2.CdkObserveContent, [i2.ContentObserver, i0.ElementRef, i0.NgZone], null, { event: \"cdkObserveContent\" }), (_l()(), i0.ɵeld(14, 0, null, null, 1, \"span\", [[\"style\", \"display:none\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"\\u00A0\"])), i0.ɵncd(null, 0)], function (_ck, _v) { var _co = _v.component; var currVal_12 = true; var currVal_13 = 20; var currVal_14 = _ck(_v, 10, 0, 150); var currVal_15 = (_co.disableRipple || _co.disabled); var currVal_16 = i0.ɵnov(_v, 3); _ck(_v, 9, 0, currVal_12, currVal_13, currVal_14, currVal_15, currVal_16); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.inputId; _ck(_v, 3, 0, currVal_0); var currVal_1 = (!i0.ɵnov(_v, 12).textContent || !i0.ɵnov(_v, 12).textContent.trim()); _ck(_v, 4, 0, currVal_1); var currVal_2 = _co.inputId; var currVal_3 = _co.required; var currVal_4 = _co.tabIndex; var currVal_5 = _co.checked; var currVal_6 = _co.disabled; var currVal_7 = _co.name; var currVal_8 = _co.checked.toString(); var currVal_9 = _co.ariaLabel; var currVal_10 = _co.ariaLabelledby; _ck(_v, 5, 0, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6, currVal_7, currVal_8, currVal_9, currVal_10); var currVal_11 = i0.ɵnov(_v, 9).unbounded; _ck(_v, 8, 0, currVal_11); }); }\nexport function View_MatSlideToggle_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, \"mat-slide-toggle\", [[\"class\", \"mat-slide-toggle\"]], [[8, \"id\", 0], [1, \"tabindex\", 0], [1, \"aria-label\", 0], [1, \"aria-labelledby\", 0], [2, \"mat-checked\", null], [2, \"mat-disabled\", null], [2, \"mat-slide-toggle-label-before\", null], [2, \"_mat-animation-noopable\", null]], [[null, \"focus\"]], function (_v, en, $event) { var ad = true; if ((\"focus\" === en)) {\n        var pd_0 = (i0.ɵnov(_v, 2)._inputElement.nativeElement.focus() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, View_MatSlideToggle_0, RenderType_MatSlideToggle)), i0.ɵprd(5120, null, i8.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i1.MatSlideToggle]), i0.ɵdid(2, 1228800, null, 0, i1.MatSlideToggle, [i0.ElementRef, i9.FocusMonitor, i0.ChangeDetectorRef, [8, null], i0.NgZone, i1.MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS, [2, i7.ANIMATION_MODULE_TYPE], [2, i5.Directionality]], null, null)], null, function (_ck, _v) { var currVal_0 = i0.ɵnov(_v, 2).id; var currVal_1 = (i0.ɵnov(_v, 2).disabled ? null : (0 - 1)); var currVal_2 = null; var currVal_3 = null; var currVal_4 = i0.ɵnov(_v, 2).checked; var currVal_5 = i0.ɵnov(_v, 2).disabled; var currVal_6 = (i0.ɵnov(_v, 2).labelPosition == \"before\"); var currVal_7 = (i0.ɵnov(_v, 2)._animationMode === \"NoopAnimations\"); _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6, currVal_7); }); }\nvar MatSlideToggleNgFactory = i0.ɵccf(\"mat-slide-toggle\", i1.MatSlideToggle, View_MatSlideToggle_Host_0, { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\", name: \"name\", id: \"id\", labelPosition: \"labelPosition\", ariaLabel: \"aria-label\", ariaLabelledby: \"aria-labelledby\", required: \"required\", checked: \"checked\" }, { change: \"change\", toggleChange: \"toggleChange\", dragChange: \"dragChange\" }, [\"*\"]);\nexport { MatSlideToggleNgFactory as MatSlideToggleNgFactory };\n","<label [attr.for]=\"inputId\" class=\"mat-slide-toggle-label\" #label><div #toggleBar class=\"mat-slide-toggle-bar\" [class.mat-slide-toggle-bar-no-side-margin]=\"!labelContent.textContent || !labelContent.textContent.trim()\"><input #input class=\"mat-slide-toggle-input cdk-visually-hidden\" type=\"checkbox\" role=\"switch\" [id]=\"inputId\" [required]=\"required\" [tabIndex]=\"tabIndex\" [checked]=\"checked\" [disabled]=\"disabled\" [attr.name]=\"name\" [attr.aria-checked]=\"checked.toString()\" [attr.aria-label]=\"ariaLabel\" [attr.aria-labelledby]=\"ariaLabelledby\" (change)=\"_onChangeEvent($event)\" (click)=\"_onInputClick($event)\"><div class=\"mat-slide-toggle-thumb-container\" #thumbContainer (slidestart)=\"_onDragStart()\" (slide)=\"_onDrag($event)\" (slideend)=\"_onDragEnd()\"><div class=\"mat-slide-toggle-thumb\"></div><div class=\"mat-slide-toggle-ripple\" mat-ripple [matRippleTrigger]=\"label\" [matRippleDisabled]=\"disableRipple || disabled\" [matRippleCentered]=\"true\" [matRippleRadius]=\"20\" [matRippleAnimation]=\"{enterDuration: 150}\"><div class=\"mat-ripple-element mat-slide-toggle-persistent-ripple\"></div></div></div></div><span class=\"mat-slide-toggle-content\" #labelContent (cdkObserveContent)=\"_onLabelTextChange()\"><span style=\"display:none\">&nbsp;</span><ng-content></ng-content></span></label>","import {Component, OnInit} from '@angular/core';\nimport {StateService} from '../../services/state.service';\nimport {PatientService} from '../../services/patient.service';\nimport {MatSelectChange} from '@angular/material';\n\n@Component({\n  selector: 'app-range',\n  templateUrl: './range.component.html',\n  styleUrls: ['./range.component.scss', '../../app.component.scss']\n})\nexport class RangeComponent implements OnInit {\n\n  originalChartData;\n  chartData;\n  states = [];\n  selected = '';\n  showUnClassifiedData = false;\n\n  constructor(private stateService: StateService, private patientService: PatientService) {\n  }\n\n  ngOnInit(): void {\n    this.stateService.getAll().subscribe((states) => {\n      this.states = states;\n    });\n    this.generateData();\n  }\n\n  generateData() {\n    this.patientService.getRange(this.selected).subscribe((chartData) => {\n      this.originalChartData = JSON.parse(JSON.stringify(chartData));\n      this.filterResults();\n    });\n  }\n\n  filterResults() {\n    if (this.showUnClassifiedData) {\n      this.chartData = JSON.parse(JSON.stringify(this.originalChartData));\n    } else {\n      this.chartData = this.originalChartData.filter((item) => {\n        return item[0] !== 'unclassified';\n      });\n    }\n  }\n\n  toggleDataVisibility() {\n    this.showUnClassifiedData = !this.showUnClassifiedData;\n    this.filterResults();\n  }\n}\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./range.component.scss.shim.ngstyle\";\nimport * as i1 from \"../../app.component.scss.shim.ngstyle\";\nimport * as i2 from \"@angular/core\";\nimport * as i3 from \"../../../../node_modules/@angular/material/core/typings/index.ngfactory\";\nimport * as i4 from \"@angular/material/core\";\nimport * as i5 from \"../../shared/bar-chart/bar-chart.component.ngfactory\";\nimport * as i6 from \"../../shared/bar-chart/bar-chart.component\";\nimport * as i7 from \"@angular/flex-layout/flex\";\nimport * as i8 from \"@angular/flex-layout/core\";\nimport * as i9 from \"@angular/cdk/bidi\";\nimport * as i10 from \"../../../../node_modules/@angular/material/form-field/typings/index.ngfactory\";\nimport * as i11 from \"@angular/material/form-field\";\nimport * as i12 from \"@angular/cdk/platform\";\nimport * as i13 from \"@angular/platform-browser/animations\";\nimport * as i14 from \"../../../../node_modules/@angular/material/select/typings/index.ngfactory\";\nimport * as i15 from \"@angular/material/select\";\nimport * as i16 from \"@angular/cdk/scrolling\";\nimport * as i17 from \"@angular/forms\";\nimport * as i18 from \"@angular/cdk/a11y\";\nimport * as i19 from \"@angular/common\";\nimport * as i20 from \"../../../../node_modules/@angular/material/slide-toggle/typings/index.ngfactory\";\nimport * as i21 from \"@angular/material/slide-toggle\";\nimport * as i22 from \"./range.component\";\nimport * as i23 from \"../../services/state.service\";\nimport * as i24 from \"../../services/patient.service\";\nvar styles_RangeComponent = [i0.styles, i1.styles];\nvar RenderType_RangeComponent = i2.ɵcrt({ encapsulation: 0, styles: styles_RangeComponent, data: {} });\nexport { RenderType_RangeComponent as RenderType_RangeComponent };\nfunction View_RangeComponent_1(_l) { return i2.ɵvid(0, [(_l()(), i2.ɵeld(0, 0, null, null, 2, \"mat-option\", [[\"class\", \"mat-option\"], [\"role\", \"option\"]], [[1, \"tabindex\", 0], [2, \"mat-selected\", null], [2, \"mat-option-multiple\", null], [2, \"mat-active\", null], [8, \"id\", 0], [1, \"aria-selected\", 0], [1, \"aria-disabled\", 0], [2, \"mat-option-disabled\", null]], [[null, \"click\"], [null, \"keydown\"]], function (_v, en, $event) { var ad = true; if ((\"click\" === en)) {\n        var pd_0 = (i2.ɵnov(_v, 1)._selectViaInteraction() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"keydown\" === en)) {\n        var pd_1 = (i2.ɵnov(_v, 1)._handleKeydown($event) !== false);\n        ad = (pd_1 && ad);\n    } return ad; }, i3.View_MatOption_0, i3.RenderType_MatOption)), i2.ɵdid(1, 8568832, [[10, 4]], 0, i4.MatOption, [i2.ElementRef, i2.ChangeDetectorRef, [2, i4.MAT_OPTION_PARENT_COMPONENT], [2, i4.MatOptgroup]], { value: [0, \"value\"] }, null), (_l()(), i2.ɵted(2, 0, [\" \", \" \"]))], function (_ck, _v) { var currVal_8 = _v.context.$implicit.code; _ck(_v, 1, 0, currVal_8); }, function (_ck, _v) { var currVal_0 = i2.ɵnov(_v, 1)._getTabIndex(); var currVal_1 = i2.ɵnov(_v, 1).selected; var currVal_2 = i2.ɵnov(_v, 1).multiple; var currVal_3 = i2.ɵnov(_v, 1).active; var currVal_4 = i2.ɵnov(_v, 1).id; var currVal_5 = i2.ɵnov(_v, 1)._getAriaSelected(); var currVal_6 = i2.ɵnov(_v, 1).disabled.toString(); var currVal_7 = i2.ɵnov(_v, 1).disabled; _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6, currVal_7); var currVal_9 = _v.context.$implicit.name; _ck(_v, 2, 0, currVal_9); }); }\nfunction View_RangeComponent_2(_l) { return i2.ɵvid(0, [(_l()(), i2.ɵeld(0, 0, null, null, 1, \"app-bar-chart\", [[\"class\", \"content-container\"]], null, null, null, i5.View_BarChartComponent_0, i5.RenderType_BarChartComponent)), i2.ɵdid(1, 638976, null, 0, i6.BarChartComponent, [], { data: [0, \"data\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.chartData; _ck(_v, 1, 0, currVal_0); }, null); }\nexport function View_RangeComponent_0(_l) { return i2.ɵvid(0, [(_l()(), i2.ɵeld(0, 0, null, null, 35, \"div\", [[\"class\", \"content-container\"], [\"fxLayout\", \"column\"]], null, null, null, null, null)), i2.ɵdid(1, 671744, null, 0, i7.DefaultLayoutDirective, [i2.ElementRef, i8.StyleUtils, [2, i7.LayoutStyleBuilder], i8.MediaMarshaller], { fxLayout: [0, \"fxLayout\"] }, null), (_l()(), i2.ɵeld(2, 0, null, null, 33, \"div\", [[\"fxLayout\", \"row\"], [\"fxLayoutAlign\", \"center center\"], [\"fxLayoutGap\", \"20px\"]], null, null, null, null, null)), i2.ɵdid(3, 671744, null, 0, i7.DefaultLayoutDirective, [i2.ElementRef, i8.StyleUtils, [2, i7.LayoutStyleBuilder], i8.MediaMarshaller], { fxLayout: [0, \"fxLayout\"] }, null), i2.ɵdid(4, 1720320, null, 0, i7.DefaultLayoutGapDirective, [i2.ElementRef, i2.NgZone, i9.Directionality, i8.StyleUtils, [2, i7.LayoutGapStyleBuilder], i8.MediaMarshaller], { fxLayoutGap: [0, \"fxLayoutGap\"] }, null), i2.ɵdid(5, 671744, null, 0, i7.DefaultLayoutAlignDirective, [i2.ElementRef, i8.StyleUtils, [2, i7.LayoutAlignStyleBuilder], i8.MediaMarshaller], { fxLayoutAlign: [0, \"fxLayoutAlign\"] }, null), (_l()(), i2.ɵeld(6, 0, null, null, 23, \"mat-form-field\", [[\"class\", \"mat-form-field\"], [\"fxFlex\", \"20%\"]], [[2, \"mat-form-field-appearance-standard\", null], [2, \"mat-form-field-appearance-fill\", null], [2, \"mat-form-field-appearance-outline\", null], [2, \"mat-form-field-appearance-legacy\", null], [2, \"mat-form-field-invalid\", null], [2, \"mat-form-field-can-float\", null], [2, \"mat-form-field-should-float\", null], [2, \"mat-form-field-has-label\", null], [2, \"mat-form-field-hide-placeholder\", null], [2, \"mat-form-field-disabled\", null], [2, \"mat-form-field-autofilled\", null], [2, \"mat-focused\", null], [2, \"mat-accent\", null], [2, \"mat-warn\", null], [2, \"ng-untouched\", null], [2, \"ng-touched\", null], [2, \"ng-pristine\", null], [2, \"ng-dirty\", null], [2, \"ng-valid\", null], [2, \"ng-invalid\", null], [2, \"ng-pending\", null], [2, \"_mat-animation-noopable\", null]], null, null, i10.View_MatFormField_0, i10.RenderType_MatFormField)), i2.ɵdid(7, 7520256, null, 9, i11.MatFormField, [i2.ElementRef, i2.ChangeDetectorRef, [2, i4.MAT_LABEL_GLOBAL_OPTIONS], [2, i9.Directionality], [2, i11.MAT_FORM_FIELD_DEFAULT_OPTIONS], i12.Platform, i2.NgZone, [2, i13.ANIMATION_MODULE_TYPE]], null, null), i2.ɵqud(603979776, 1, { _controlNonStatic: 0 }), i2.ɵqud(335544320, 2, { _controlStatic: 0 }), i2.ɵqud(603979776, 3, { _labelChildNonStatic: 0 }), i2.ɵqud(335544320, 4, { _labelChildStatic: 0 }), i2.ɵqud(603979776, 5, { _placeholderChild: 0 }), i2.ɵqud(603979776, 6, { _errorChildren: 1 }), i2.ɵqud(603979776, 7, { _hintChildren: 1 }), i2.ɵqud(603979776, 8, { _prefixChildren: 1 }), i2.ɵqud(603979776, 9, { _suffixChildren: 1 }), i2.ɵdid(17, 671744, null, 0, i7.DefaultFlexDirective, [i2.ElementRef, i8.StyleUtils, i8.LAYOUT_CONFIG, i7.FlexStyleBuilder, i8.MediaMarshaller], { fxFlex: [0, \"fxFlex\"] }, null), (_l()(), i2.ɵeld(18, 0, null, 3, 2, \"mat-label\", [], null, null, null, null, null)), i2.ɵdid(19, 16384, [[3, 4], [4, 4]], 0, i11.MatLabel, [], null, null), (_l()(), i2.ɵted(-1, null, [\"State\"])), (_l()(), i2.ɵeld(21, 0, null, 1, 8, \"mat-select\", [[\"class\", \"mat-select\"], [\"role\", \"listbox\"]], [[1, \"id\", 0], [1, \"tabindex\", 0], [1, \"aria-label\", 0], [1, \"aria-labelledby\", 0], [1, \"aria-required\", 0], [1, \"aria-disabled\", 0], [1, \"aria-invalid\", 0], [1, \"aria-owns\", 0], [1, \"aria-multiselectable\", 0], [1, \"aria-describedby\", 0], [1, \"aria-activedescendant\", 0], [2, \"mat-select-disabled\", null], [2, \"mat-select-invalid\", null], [2, \"mat-select-required\", null], [2, \"mat-select-empty\", null]], [[null, \"valueChange\"], [null, \"selectionChange\"], [null, \"keydown\"], [null, \"focus\"], [null, \"blur\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"keydown\" === en)) {\n        var pd_0 = (i2.ɵnov(_v, 23)._handleKeydown($event) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"focus\" === en)) {\n        var pd_1 = (i2.ɵnov(_v, 23)._onFocus() !== false);\n        ad = (pd_1 && ad);\n    } if ((\"blur\" === en)) {\n        var pd_2 = (i2.ɵnov(_v, 23)._onBlur() !== false);\n        ad = (pd_2 && ad);\n    } if ((\"valueChange\" === en)) {\n        var pd_3 = ((_co.selected = $event) !== false);\n        ad = (pd_3 && ad);\n    } if ((\"selectionChange\" === en)) {\n        var pd_4 = (_co.generateData() !== false);\n        ad = (pd_4 && ad);\n    } return ad; }, i14.View_MatSelect_0, i14.RenderType_MatSelect)), i2.ɵprd(6144, null, i4.MAT_OPTION_PARENT_COMPONENT, null, [i15.MatSelect]), i2.ɵdid(23, 2080768, null, 3, i15.MatSelect, [i16.ViewportRuler, i2.ChangeDetectorRef, i2.NgZone, i4.ErrorStateMatcher, i2.ElementRef, [2, i9.Directionality], [2, i17.NgForm], [2, i17.FormGroupDirective], [2, i11.MatFormField], [8, null], [8, null], i15.MAT_SELECT_SCROLL_STRATEGY, i18.LiveAnnouncer], { value: [0, \"value\"] }, { selectionChange: \"selectionChange\", valueChange: \"valueChange\" }), i2.ɵqud(603979776, 10, { options: 1 }), i2.ɵqud(603979776, 11, { optionGroups: 1 }), i2.ɵqud(603979776, 12, { customTrigger: 0 }), i2.ɵprd(2048, [[1, 4], [2, 4]], i11.MatFormFieldControl, null, [i15.MatSelect]), (_l()(), i2.ɵand(16777216, null, 1, 1, null, View_RangeComponent_1)), i2.ɵdid(29, 278528, null, 0, i19.NgForOf, [i2.ViewContainerRef, i2.TemplateRef, i2.IterableDiffers], { ngForOf: [0, \"ngForOf\"] }, null), (_l()(), i2.ɵeld(30, 0, null, null, 5, \"mat-slide-toggle\", [[\"class\", \"mat-slide-toggle\"], [\"color\", \"primary\"]], [[8, \"id\", 0], [1, \"tabindex\", 0], [1, \"aria-label\", 0], [1, \"aria-labelledby\", 0], [2, \"mat-checked\", null], [2, \"mat-disabled\", null], [2, \"mat-slide-toggle-label-before\", null], [2, \"_mat-animation-noopable\", null]], [[null, \"toggleChange\"], [null, \"focus\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"focus\" === en)) {\n        var pd_0 = (i2.ɵnov(_v, 32)._inputElement.nativeElement.focus() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"toggleChange\" === en)) {\n        var pd_1 = (_co.toggleDataVisibility() !== false);\n        ad = (pd_1 && ad);\n    } return ad; }, i20.View_MatSlideToggle_0, i20.RenderType_MatSlideToggle)), i2.ɵprd(5120, null, i17.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i21.MatSlideToggle]), i2.ɵdid(32, 1228800, null, 0, i21.MatSlideToggle, [i2.ElementRef, i18.FocusMonitor, i2.ChangeDetectorRef, [8, null], i2.NgZone, i21.MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS, [2, i13.ANIMATION_MODULE_TYPE], [2, i9.Directionality]], { color: [0, \"color\"], checked: [1, \"checked\"] }, { toggleChange: \"toggleChange\" }), (_l()(), i2.ɵeld(33, 0, null, 0, 2, \"mat-label\", [], null, null, null, null, null)), i2.ɵdid(34, 16384, null, 0, i11.MatLabel, [], null, null), (_l()(), i2.ɵted(-1, null, [\"Show Unclassified data\"])), (_l()(), i2.ɵand(16777216, null, null, 1, null, View_RangeComponent_2)), i2.ɵdid(37, 16384, null, 0, i19.NgIf, [i2.ViewContainerRef, i2.TemplateRef], { ngIf: [0, \"ngIf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = \"column\"; _ck(_v, 1, 0, currVal_0); var currVal_1 = \"row\"; _ck(_v, 3, 0, currVal_1); var currVal_2 = \"20px\"; _ck(_v, 4, 0, currVal_2); var currVal_3 = \"center center\"; _ck(_v, 5, 0, currVal_3); var currVal_26 = \"20%\"; _ck(_v, 17, 0, currVal_26); var currVal_42 = _co.selected; _ck(_v, 23, 0, currVal_42); var currVal_43 = _co.states; _ck(_v, 29, 0, currVal_43); var currVal_52 = \"primary\"; var currVal_53 = _co.showUnClassifiedData; _ck(_v, 32, 0, currVal_52, currVal_53); var currVal_54 = _co.chartData; _ck(_v, 37, 0, currVal_54); }, function (_ck, _v) { var currVal_4 = (i2.ɵnov(_v, 7).appearance == \"standard\"); var currVal_5 = (i2.ɵnov(_v, 7).appearance == \"fill\"); var currVal_6 = (i2.ɵnov(_v, 7).appearance == \"outline\"); var currVal_7 = (i2.ɵnov(_v, 7).appearance == \"legacy\"); var currVal_8 = i2.ɵnov(_v, 7)._control.errorState; var currVal_9 = i2.ɵnov(_v, 7)._canLabelFloat; var currVal_10 = i2.ɵnov(_v, 7)._shouldLabelFloat(); var currVal_11 = i2.ɵnov(_v, 7)._hasFloatingLabel(); var currVal_12 = i2.ɵnov(_v, 7)._hideControlPlaceholder(); var currVal_13 = i2.ɵnov(_v, 7)._control.disabled; var currVal_14 = i2.ɵnov(_v, 7)._control.autofilled; var currVal_15 = i2.ɵnov(_v, 7)._control.focused; var currVal_16 = (i2.ɵnov(_v, 7).color == \"accent\"); var currVal_17 = (i2.ɵnov(_v, 7).color == \"warn\"); var currVal_18 = i2.ɵnov(_v, 7)._shouldForward(\"untouched\"); var currVal_19 = i2.ɵnov(_v, 7)._shouldForward(\"touched\"); var currVal_20 = i2.ɵnov(_v, 7)._shouldForward(\"pristine\"); var currVal_21 = i2.ɵnov(_v, 7)._shouldForward(\"dirty\"); var currVal_22 = i2.ɵnov(_v, 7)._shouldForward(\"valid\"); var currVal_23 = i2.ɵnov(_v, 7)._shouldForward(\"invalid\"); var currVal_24 = i2.ɵnov(_v, 7)._shouldForward(\"pending\"); var currVal_25 = !i2.ɵnov(_v, 7)._animationsEnabled; _ck(_v, 6, 1, [currVal_4, currVal_5, currVal_6, currVal_7, currVal_8, currVal_9, currVal_10, currVal_11, currVal_12, currVal_13, currVal_14, currVal_15, currVal_16, currVal_17, currVal_18, currVal_19, currVal_20, currVal_21, currVal_22, currVal_23, currVal_24, currVal_25]); var currVal_27 = i2.ɵnov(_v, 23).id; var currVal_28 = i2.ɵnov(_v, 23).tabIndex; var currVal_29 = i2.ɵnov(_v, 23)._getAriaLabel(); var currVal_30 = i2.ɵnov(_v, 23)._getAriaLabelledby(); var currVal_31 = i2.ɵnov(_v, 23).required.toString(); var currVal_32 = i2.ɵnov(_v, 23).disabled.toString(); var currVal_33 = i2.ɵnov(_v, 23).errorState; var currVal_34 = (i2.ɵnov(_v, 23).panelOpen ? i2.ɵnov(_v, 23)._optionIds : null); var currVal_35 = i2.ɵnov(_v, 23).multiple; var currVal_36 = (i2.ɵnov(_v, 23)._ariaDescribedby || null); var currVal_37 = i2.ɵnov(_v, 23)._getAriaActiveDescendant(); var currVal_38 = i2.ɵnov(_v, 23).disabled; var currVal_39 = i2.ɵnov(_v, 23).errorState; var currVal_40 = i2.ɵnov(_v, 23).required; var currVal_41 = i2.ɵnov(_v, 23).empty; _ck(_v, 21, 1, [currVal_27, currVal_28, currVal_29, currVal_30, currVal_31, currVal_32, currVal_33, currVal_34, currVal_35, currVal_36, currVal_37, currVal_38, currVal_39, currVal_40, currVal_41]); var currVal_44 = i2.ɵnov(_v, 32).id; var currVal_45 = (i2.ɵnov(_v, 32).disabled ? null : (0 - 1)); var currVal_46 = null; var currVal_47 = null; var currVal_48 = i2.ɵnov(_v, 32).checked; var currVal_49 = i2.ɵnov(_v, 32).disabled; var currVal_50 = (i2.ɵnov(_v, 32).labelPosition == \"before\"); var currVal_51 = (i2.ɵnov(_v, 32)._animationMode === \"NoopAnimations\"); _ck(_v, 30, 0, currVal_44, currVal_45, currVal_46, currVal_47, currVal_48, currVal_49, currVal_50, currVal_51); }); }\nexport function View_RangeComponent_Host_0(_l) { return i2.ɵvid(0, [(_l()(), i2.ɵeld(0, 0, null, null, 1, \"app-range\", [], null, null, null, View_RangeComponent_0, RenderType_RangeComponent)), i2.ɵdid(1, 114688, null, 0, i22.RangeComponent, [i23.StateService, i24.PatientService], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar RangeComponentNgFactory = i2.ɵccf(\"app-range\", i22.RangeComponent, View_RangeComponent_Host_0, {}, {}, []);\nexport { RangeComponentNgFactory as RangeComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\"\"];\nexport { styles as styles };\n","<div fxLayout=\"column\" class=\"content-container\">\n  <div fxLayout=\"row\" fxLayoutAlign=\"center center\" fxLayoutGap=\"20px\">\n    <mat-form-field fxFlex=\"20%\">\n      <mat-label>State</mat-label>\n      <mat-select [(value)]=\"selected\" (selectionChange)=\"generateData()\">\n        <mat-option *ngFor=\"let state of states\" [value]=\"state.code\">\n          {{state.name}}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n\n    <mat-slide-toggle color=\"primary\" [checked]=\"showUnClassifiedData\" (toggleChange)=\"toggleDataVisibility()\">\n      <mat-label>Show Unclassified data</mat-label>\n    </mat-slide-toggle>\n  </div>\n</div>\n<app-bar-chart class=\"content-container\" *ngIf=\"chartData\" [data]=\"chartData\"></app-bar-chart>\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {RangeComponent} from './range/range.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RangeComponent\n  }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RangeRoutingModule {\n}\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./range.module\";\nimport * as i2 from \"../../../node_modules/@angular/router/router.ngfactory\";\nimport * as i3 from \"./range/range.component.ngfactory\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/cdk/overlay\";\nimport * as i6 from \"@angular/cdk/bidi\";\nimport * as i7 from \"@angular/cdk/observers\";\nimport * as i8 from \"@angular/material/select\";\nimport * as i9 from \"@angular/flex-layout/core\";\nimport * as i10 from \"@angular/platform-browser\";\nimport * as i11 from \"@angular/material/core\";\nimport * as i12 from \"@angular/router\";\nimport * as i13 from \"./range-routing.module\";\nimport * as i14 from \"@angular/cdk/platform\";\nimport * as i15 from \"@angular/material/button\";\nimport * as i16 from \"@angular/material/icon\";\nimport * as i17 from \"@angular/cdk/portal\";\nimport * as i18 from \"@angular/cdk/scrolling\";\nimport * as i19 from \"@angular/material/form-field\";\nimport * as i20 from \"@angular/flex-layout/flex\";\nimport * as i21 from \"@angular/flex-layout/extended\";\nimport * as i22 from \"@angular/flex-layout/grid\";\nimport * as i23 from \"@angular/flex-layout\";\nimport * as i24 from \"../shared/shared.module\";\nimport * as i25 from \"@angular/material/slide-toggle\";\nimport * as i26 from \"./range/range.component\";\nvar RangeModuleNgFactory = i0.ɵcmf(i1.RangeModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, [i2.ɵangular_packages_router_router_lNgFactory, i3.RangeComponentNgFactory]], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(4608, i4.NgLocalization, i4.NgLocaleLocalization, [i0.LOCALE_ID, [2, i4.ɵangular_packages_common_common_a]]), i0.ɵmpd(4608, i5.Overlay, i5.Overlay, [i5.ScrollStrategyOptions, i5.OverlayContainer, i0.ComponentFactoryResolver, i5.OverlayPositionBuilder, i5.OverlayKeyboardDispatcher, i0.Injector, i0.NgZone, i4.DOCUMENT, i6.Directionality, [2, i4.Location]]), i0.ɵmpd(5120, i5.ɵc, i5.ɵd, [i5.Overlay]), i0.ɵmpd(4608, i7.MutationObserverFactory, i7.MutationObserverFactory, []), i0.ɵmpd(5120, i8.MAT_SELECT_SCROLL_STRATEGY, i8.MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY, [i5.Overlay]), i0.ɵmpd(5120, i0.APP_BOOTSTRAP_LISTENER, function (p0_0, p0_1) { return [i9.removeStyles(p0_0, p0_1)]; }, [i4.DOCUMENT, i0.PLATFORM_ID]), i0.ɵmpd(4608, i10.HAMMER_GESTURE_CONFIG, i11.GestureConfig, [[2, i11.MAT_HAMMER_OPTIONS], [2, i11.MatCommonModule]]), i0.ɵmpd(1073742336, i4.CommonModule, i4.CommonModule, []), i0.ɵmpd(1073742336, i12.RouterModule, i12.RouterModule, [[2, i12.ɵangular_packages_router_router_a], [2, i12.Router]]), i0.ɵmpd(1073742336, i13.RangeRoutingModule, i13.RangeRoutingModule, []), i0.ɵmpd(1073742336, i6.BidiModule, i6.BidiModule, []), i0.ɵmpd(1073742336, i11.MatCommonModule, i11.MatCommonModule, [[2, i11.MATERIAL_SANITY_CHECKS], [2, i10.HAMMER_LOADER]]), i0.ɵmpd(1073742336, i14.PlatformModule, i14.PlatformModule, []), i0.ɵmpd(1073742336, i11.MatRippleModule, i11.MatRippleModule, []), i0.ɵmpd(1073742336, i15.MatButtonModule, i15.MatButtonModule, []), i0.ɵmpd(1073742336, i16.MatIconModule, i16.MatIconModule, []), i0.ɵmpd(1073742336, i17.PortalModule, i17.PortalModule, []), i0.ɵmpd(1073742336, i18.ScrollingModule, i18.ScrollingModule, []), i0.ɵmpd(1073742336, i5.OverlayModule, i5.OverlayModule, []), i0.ɵmpd(1073742336, i11.MatPseudoCheckboxModule, i11.MatPseudoCheckboxModule, []), i0.ɵmpd(1073742336, i11.MatOptionModule, i11.MatOptionModule, []), i0.ɵmpd(1073742336, i7.ObserversModule, i7.ObserversModule, []), i0.ɵmpd(1073742336, i19.MatFormFieldModule, i19.MatFormFieldModule, []), i0.ɵmpd(1073742336, i8.MatSelectModule, i8.MatSelectModule, []), i0.ɵmpd(1073742336, i9.CoreModule, i9.CoreModule, []), i0.ɵmpd(1073742336, i20.FlexModule, i20.FlexModule, []), i0.ɵmpd(1073742336, i21.ExtendedModule, i21.ExtendedModule, []), i0.ɵmpd(1073742336, i22.GridModule, i22.GridModule, []), i0.ɵmpd(1073742336, i23.FlexLayoutModule, i23.FlexLayoutModule, [[2, i9.SERVER_TOKEN], i0.PLATFORM_ID]), i0.ɵmpd(1073742336, i24.SharedModule, i24.SharedModule, []), i0.ɵmpd(1073742336, i25._MatSlideToggleRequiredValidatorModule, i25._MatSlideToggleRequiredValidatorModule, []), i0.ɵmpd(1073742336, i25.MatSlideToggleModule, i25.MatSlideToggleModule, []), i0.ɵmpd(1073742336, i1.RangeModule, i1.RangeModule, []), i0.ɵmpd(1024, i12.ROUTES, function () { return [[{ path: \"\", component: i26.RangeComponent }]]; }, [])]); });\nexport { RangeModuleNgFactory as RangeModuleNgFactory };\n"]}